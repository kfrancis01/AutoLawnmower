// Mixed Mode Sample for Kangaroo
// Copyright (c) 2013 Dimension Engineering LLC
// See license.txt for license details.

#include <Kangaroo.h>

// Arduino TX (Serial2)goes to Kangaroo S1
// Arduino RX (Serial2)goes to Kangaroo S2
// Arduino GND         goes to Kangaroo 0V
// Arduino 5V          goes to Kangaroo 5V (OPTIONAL, if you want Kangaroo to power the Arduino)
const long ARBAUDRATE= 57600; //Arduino Baudrate
const long KRBAUDRATE= 57600;  //kangaroo baudrate
// Mixed mode channels on Kangaroo are, by default, 'D' and 'T'.
int increment = 0;
const int encoderSpeed = 3; //ticks per second
int LapNumber = 0;
int ta = 90; 
double TicksPerDegree = 0.78; // Ratio of Ticks to the degrees turned

KangarooSerial  K(Serial2);
KangarooChannel Drive(K, 'D');
KangarooChannel Turn(K, 'T');

void setup()
{
  Serial.begin(ARBAUDRATE);
  Serial2.begin(KRBAUDRATE);
  
  Drive.start();
  Turn.start();
  
  Drive.si(0);
  Turn.si(0);
}

void loop()
{
  ////////////////////////
  // Forward test
  ///////////////////////
  
  if(increment <= 2){
    Forward();
  }
  
  /////////////////////////
  // Position Update test
  /////////////////////////

  if(increment > 2 && increment <= 6){
    ta = ta * -1;
    AdjustPos();
    delay(1000);
  }
  
  ///////////////////////
  // Turn Test
  ///////////////////////
  if(increment > 6 && increment < 8){
    turnOneEighty();
  }
  increment++;

}

void Forward(){
  Drive.pi(20,encoderSpeed).wait(); //specific distance to travel at a given speed
  delay(1000);
  return;
}


void AdjustPos(){
  int Travel = round(ta * TicksPerDegree);
  Turn.pi(Travel,encoderSpeed-1).wait(); // Initiate Turn
  Forward(); //start forward protocol after adjustment
  return;
}

void turnOneEighty(){
  int Travel = round(90 * TicksPerDegree); // Ticks to make a 90 deg turn
  // Syntax 'ConditionalStatement' ? 'ValueifTrue' : 'ValueifFalse'
  Travel = LapNumber % 2 == 0 ? Travel : -1 * Travel;

  // Initiate 90 Deg Turn
  Turn.pi(Travel,encoderSpeed-1).wait(); // Initiate Turn
  // Back up a little
  Drive.pi(-20,encoderSpeed-1).wait();
  // Make another 90 Deg Turn
  Turn.pi(Travel,encoderSpeed-1).wait(); // Initiate Turn

  LapNumber++; // Increment Lap Number everytime a full turn occurs
  Forward();
  return;
}
